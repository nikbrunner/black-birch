@import 'variables';
@import 'colors';

@mixin linkStyle {
	@include textShadow();
	text-decoration: none;
	color: $accent-color;
	font-weight: 600;
	&:hover {
		color: $bright-color;
	}
	&:focus {
		outline: none;
	}
	&:active {
		outline: none;
	}
}

@mixin action-btn {
	pre {
		background: $accent-color;
		text-align: center;
		.function {
			color: $dark-color;
		}
		.punctuation {
			color: $bright-color;
		}
		code {
			color: $mid2-color;
		}
		&:hover {
			background: $mid2-color;
			.function {
				color: $mid1-color;
			}
			.punctuation {
				color: $bright-color;
			}
			code {
				color: $bright-color;
			}
		}
	}
}

@mixin grid($columns, $column-gap, $rows, $row-gap) {
	display: grid;
	grid-template-columns: $columns;
	grid-column-gap: $column-gap;
	grid-template-rows: $rows;
	grid-row-gap: $row-gap;
}

@mixin flex(
	$flex-flow,
	$justify-content,
	$align-content,
	$align-items
) {
	display: flex;
	flex-flow: $flex-flow;
	justify-content: $justify-content;
	align-content: $align-content;
	align-items: $align-items;
}

@mixin linearGradientBG(
	$color1,
	$color1-threshold,
	$color2,
	$color2-threshold,
	$dir
) {
	background: $color1;
	background: linear-gradient(
		$dir,
		$color1 $color1-threshold,
		$color2 $color2-threshold
	);
}

@mixin radialGradientBG(
	$color1,
	$color1-threshold,
	$color2,
	$color2-threshold,
	$dir
) {
	background: $color1;
	background: radial-gradient(
		$dir,
		$color1 $color1-threshold,
		$color2 $color2-threshold
	);
}

@mixin progressBar($skillLevel) {
	background: transparent;
	background: linear-gradient(
		90deg,
		$dark-color 0%,
		$mid1-color $skillLevel,
		rgba(255, 255, 255, 0) $skillLevel,
		rgba(255, 255, 255, 0) 100%
	);
}

@mixin progressBar--cv($skillLevel) {
	background: transparent;
	background: linear-gradient(
		90deg,
		$mid-gray--cv 0%,
		$mid-gray--cv $skillLevel,
		white $skillLevel,
		white 100%
	);
}

@mixin columns($column-count, $column-gap, $column-rule) {
	column-count: $column-count;
	column-gap: $column-gap;
	column-rule: $column-rule;
}

@mixin mobileTableScroll() {
	display: block;
	overflow-x: auto;
	white-space: nowrap;
	width: auto;
}

@mixin sticky($z-index) {
	@include boxShadow--tight();
	background: $stickyHeader-color;
	display: block;
	width: 100%;
	position: sticky;
	top: $header-height;
	z-index: $z-index;
}

// Shadows
@mixin boxShadow--std($opacity) {
	box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, $opacity);
}
@mixin boxShadow--std--hover($opacity) {
	box-shadow: 0 0.15rem 0.75rem rgba(0, 0, 0, $opacity);
}

@mixin boxShadow--tight($shadow--color: #0f0f0f33) {
	box-shadow: $shadow--color 0px 2px 4px;
}

@mixin boxShadow--tight--inset($shadow--color: #0f0f0f33) {
	box-shadow: $shadow--color 0px 0px 0px 1px inset,
		$shadow--color 0px 0px 4px inset;
}

@mixin textShadow() {
	text-shadow: 0 1px rgba(0, 0, 0, 0.25);
}

@mixin navItem--desktop() {
	cursor: pointer;
	padding: 0;
	margin: 0 $space-s;
	text-decoration: none;
	text-shadow: none;
	font-weight: normal;
	font-size: $font-size-m;
	transition: opacity calc(#{$trans-fast} / 2);
	border-bottom: 3px solid transparent;
	transition: color 0.25s;
	transition: border 0.25s;
	@media screen and (max-width: $breakpoint-l) {
		margin: 0 $space-xs;
	}
	&:hover {
		border-bottom: 3px solid $accent-color;
		color: $accent-color;
	}
	&:first-of-type {
		margin-left: 0;
	}
	&:last-of-type {
		margin-right: 0;
	}
}

// Gallery
@mixin gallery(
	$grid-template-columns,
	$grid-template-rows,
	$grid-gap,
	$img-height
) {
	display: grid;
	grid-template-columns: $grid-template-columns;
	grid-template-rows: $grid-template-rows;
	grid-gap: $grid-gap;
	a {
		align-self: center;
		height: $img-height;
		@include flex(row nowrap, center, center, center);
	}
	img {
		border-radius: $border-radius;
		object-fit: cover;
		transition: all 0.25s;
		transform: scale(-0.5);
		opacity: 0.75;
		&.loaded {
			filter: drop-shadow(0 0.25rem 0.5rem rgba(0, 0, 0, 0.25));
			transform: scale(1);
			width: 100%;
			height: 100%;
			opacity: 1;
		}
		&:hover {
			opacity: 0.85;
		}
	}
}
